Search.setIndex({"docnames": ["index", "modules", "superneuroabm", "superneuroabm.core"], "filenames": ["index.rst", "modules.rst", "superneuroabm.rst", "superneuroabm.core.rst"], "titles": ["Welcome to superneuroabm\u2019s documentation!", "superneuroabm", "superneuroabm package", "superneuroabm.core package"], "terms": {"packag": [0, 1], "subpackag": [0, 1], "submodul": [0, 1], "model": [0, 1], "modul": [0, 1], "neuron": [0, 1], "core": [0, 1, 2], "agent": [0, 1, 2], "util": [0, 1, 2], "index": 0, "search": 0, "page": 0, "content": 1, "neuromorphicmodel": [1, 2], "add_spik": [1, 2], "create_neuron": [1, 2], "create_synaps": [1, 2], "get_spike_tim": [1, 2], "load": [1, 2, 3], "save": [1, 2, 3], "setup": [1, 2, 3], "simul": [1, 2, 3], "summari": [1, 2], "update_synaps": [1, 2], "neuron_step_func": [1, 2], "synapse_step_func": [1, 2], "synapse_with_stdp_step_func": [1, 2], "agentfactori": [2, 3], "breed": [2, 3], "create_ag": [2, 3], "generate_agent_data_tensor": [2, 3], "get_agent_property_valu": [2, 3], "get_agents_with": [2, 3], "num_ag": [2, 3], "register_bre": [2, 3], "set_agent_property_valu": [2, 3], "update_agents_properti": [2, 3], "name": [2, 3], "properti": [2, 3], "register_properti": [2, 3], "register_step_func": [2, 3], "step_func": [2, 3], "threadsperblock": [2, 3], "create_agent_of_bre": [2, 3], "get_synapse_weight": [2, 3], "generate_gpu_func": [2, 3], "smap": [2, 3], "compress_tensor": [2, 3], "convert_to_equal_side_tensor": [2, 3], "class": [2, 3], "build": 2, "an": [2, 3], "snn": 2, "neuron_breed_info": 2, "type": [2, 3], "dict": [2, 3], "str": [2, 3], "list": [2, 3], "callabl": [2, 3], "function": [2, 3], "base": [2, 3], "neuron_id": 2, "int": [2, 3], "tick": [2, 3], "valu": [2, 3], "float": [2, 3], "none": [2, 3], "schedul": 2, "extern": 2, "input": 2, "spike": 2, "thi": [2, 3], "paramet": [2, 3], "which": 2, "should": 2, "trigger": 2, "threshold": 2, "1": [2, 3], "reset_st": 2, "0": [2, 3], "leak": 2, "refractory_period": 2, "axonal_delai": 2, "creat": [2, 3], "return": [2, 3], "sagesim": 2, "id": [2, 3], "pre_neuron_id": 2, "post_neuron_id": 2, "weight": [2, 3], "synaptic_delai": 2, "synapse_learning_param": 2, "add": 2, "synaps": [2, 3], "presynapt": 2, "postsynapt": 2, "delai": 2, "synapt": [2, 3], "number": [2, 3], "timestep": 2, "option": [2, 3], "ani": [2, 3], "us": [2, 3], "learn": 2, "enabl": 2, "step": [2, 3], "must": [2, 3], "specifi": [2, 3], "order": 2, "arrai": [2, 3], "fpath": [2, 3], "from": [2, 3], "pickl": [2, 3], "file": [2, 3], "path": [2, 3], "overridden": [2, 3], "addit": [2, 3], "data": [2, 3], "pertain": [2, 3], "applic": [2, 3], "app_data": [2, 3], "use_cuda": [2, 3], "bool": [2, 3], "fals": 2, "output_buffer_len": 2, "1000": 2, "retain_weight": 2, "reset": [2, 3], "initi": [2, 3], "default": [2, 3], "If": 2, "true": [2, 3], "updat": [2, 3], "ar": [2, 3], "upon": 2, "update_data_tick": [2, 3], "num_cpu_proc": [2, 3], "4": [2, 3], "overrid": 2, "mainli": 2, "regist": [2, 3], "agentdatacollector": 2, "monitor": 2, "mark": 2, "output": 2, "verbos": 2, "network": 2, "structur": 2, "inform": 2, "netowkr": 2, "strutur": 2, "neural": 2, "global_data_vector": 2, "output_synapsess": 2, "t_elaps": 2, "internal_st": 2, "neuron_delay_reg": 2, "input_spikess": 2, "output_synapses_learning_paramss": 2, "output_spikess": 2, "my_idx": 2, "object": 3, "A": 3, "current": 3, "kwarg": 3, "given": 3, "definit": 3, "argument": 3, "much": 3, "match": 3, "alreadi": 3, "property_nam": 3, "agent_id": 3, "": 3, "queri": 3, "kei": 3, "satisfi": 3, "boolean": 3, "accept": 3, "where": 3, "mai": 3, "form": 3, "logic": 3, "take": 3, "remov": 3, "thei": 3, "kill": 3, "moment": 3, "so": 3, "can": 3, "under": 3, "dim": 3, "set": 3, "new": 3, "dimens": 3, "property_valu": 3, "Not": 3, "requir": 3, "improv": 3, "perform": 3, "provi": 3, "e": 3, "g": 3, "i": 3, "singl": 3, "like": 3, "2": 3, "multi": 3, "dimension": 3, "equal_side_agent_data_tensor": 3, "nan": 3, "max_dim": 3, "prioriti": 3, "what": 3, "suppos": 3, "do": 3, "dure": 3, "basic": 3, "32": 3, "presynaptic_neuron_id": 3, "post_synaptic_neuron_id": 3, "stdp": 3, "turn": 3, "final": 3, "app": 3, "call": 3, "befor": 3, "first": 3, "readi": 3, "run": 3, "gpu": 3, "mode": 3, "n_properti": 3, "breed_idx_2_step_func_by_prior": 3, "func_arg": 3, "arr": 3, "iter": 3, "level": 3, "tensor": 3, "tupl": 3}, "objects": {"": [[2, 0, 0, "-", "superneuroabm"]], "superneuroabm": [[3, 0, 0, "-", "core"], [2, 0, 0, "-", "model"], [2, 0, 0, "-", "neuron"]], "superneuroabm.core": [[3, 0, 0, "-", "agent"], [3, 0, 0, "-", "model"], [3, 0, 0, "-", "util"]], "superneuroabm.core.agent": [[3, 1, 1, "", "AgentFactory"], [3, 1, 1, "", "Breed"]], "superneuroabm.core.agent.AgentFactory": [[3, 2, 1, "", "breeds"], [3, 3, 1, "", "create_agent"], [3, 3, 1, "", "generate_agent_data_tensors"], [3, 3, 1, "", "get_agent_property_value"], [3, 3, 1, "", "get_agents_with"], [3, 2, 1, "", "num_agents"], [3, 3, 1, "", "register_breed"], [3, 3, 1, "", "set_agent_property_value"], [3, 3, 1, "", "update_agents_properties"]], "superneuroabm.core.agent.Breed": [[3, 2, 1, "", "name"], [3, 2, 1, "", "properties"], [3, 3, 1, "", "register_property"], [3, 3, 1, "", "register_step_func"], [3, 2, 1, "", "step_funcs"]], "superneuroabm.core.model": [[3, 1, 1, "", "Model"], [3, 5, 1, "", "generate_gpu_func"], [3, 5, 1, "", "smap"]], "superneuroabm.core.model.Model": [[3, 4, 1, "", "THREADSPERBLOCK"], [3, 3, 1, "", "create_agent_of_breed"], [3, 3, 1, "", "get_agent_property_value"], [3, 3, 1, "", "get_agents_with"], [3, 3, 1, "", "get_synapse_weight"], [3, 3, 1, "", "load"], [3, 3, 1, "", "register_breed"], [3, 3, 1, "", "save"], [3, 3, 1, "", "set_agent_property_value"], [3, 3, 1, "", "setup"], [3, 3, 1, "", "simulate"]], "superneuroabm.core.util": [[3, 5, 1, "", "compress_tensor"], [3, 5, 1, "", "convert_to_equal_side_tensor"]], "superneuroabm.model": [[2, 1, 1, "", "NeuromorphicModel"]], "superneuroabm.model.NeuromorphicModel": [[2, 3, 1, "", "add_spike"], [2, 3, 1, "", "create_neuron"], [2, 3, 1, "", "create_synapse"], [2, 3, 1, "", "get_spike_times"], [2, 3, 1, "", "load"], [2, 3, 1, "", "save"], [2, 3, 1, "", "setup"], [2, 3, 1, "", "simulate"], [2, 3, 1, "", "summary"], [2, 3, 1, "", "update_synapse"]], "superneuroabm.neuron": [[2, 5, 1, "", "neuron_step_func"], [2, 5, 1, "", "synapse_step_func"], [2, 5, 1, "", "synapse_with_stdp_step_func"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:property", "3": "py:method", "4": "py:attribute", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "property", "Python property"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "function", "Python function"]}, "titleterms": {"welcom": 0, "superneuroabm": [0, 1, 2, 3], "": 0, "document": 0, "content": [0, 2, 3], "indic": 0, "tabl": 0, "packag": [2, 3], "subpackag": 2, "submodul": [2, 3], "model": [2, 3], "modul": [2, 3], "neuron": 2, "core": 3, "agent": 3, "util": 3}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 58}, "alltitles": {"Welcome to superneuroabm\u2019s documentation!": [[0, "welcome-to-superneuroabm-s-documentation"]], "Contents:": [[0, null]], "Indices and tables": [[0, "indices-and-tables"]], "superneuroabm": [[1, "superneuroabm"]], "superneuroabm package": [[2, "superneuroabm-package"]], "Subpackages": [[2, "subpackages"]], "Submodules": [[2, "submodules"], [3, "submodules"]], "superneuroabm.model module": [[2, "module-superneuroabm.model"]], "superneuroabm.neuron module": [[2, "module-superneuroabm.neuron"]], "Module contents": [[2, "module-superneuroabm"], [3, "module-superneuroabm.core"]], "superneuroabm.core package": [[3, "superneuroabm-core-package"]], "superneuroabm.core.agent module": [[3, "module-superneuroabm.core.agent"]], "superneuroabm.core.model module": [[3, "module-superneuroabm.core.model"]], "superneuroabm.core.util module": [[3, "module-superneuroabm.core.util"]]}, "indexentries": {"neuromorphicmodel (class in superneuroabm.model)": [[2, "superneuroabm.model.NeuromorphicModel"]], "add_spike() (superneuroabm.model.neuromorphicmodel method)": [[2, "superneuroabm.model.NeuromorphicModel.add_spike"]], "create_neuron() (superneuroabm.model.neuromorphicmodel method)": [[2, "superneuroabm.model.NeuromorphicModel.create_neuron"]], "create_synapse() (superneuroabm.model.neuromorphicmodel method)": [[2, "superneuroabm.model.NeuromorphicModel.create_synapse"]], "get_spike_times() (superneuroabm.model.neuromorphicmodel method)": [[2, "superneuroabm.model.NeuromorphicModel.get_spike_times"]], "load() (superneuroabm.model.neuromorphicmodel method)": [[2, "superneuroabm.model.NeuromorphicModel.load"]], "module": [[2, "module-superneuroabm"], [2, "module-superneuroabm.model"], [2, "module-superneuroabm.neuron"], [3, "module-superneuroabm.core"], [3, "module-superneuroabm.core.agent"], [3, "module-superneuroabm.core.model"], [3, "module-superneuroabm.core.util"]], "neuron_step_func() (in module superneuroabm.neuron)": [[2, "superneuroabm.neuron.neuron_step_func"]], "save() (superneuroabm.model.neuromorphicmodel method)": [[2, "superneuroabm.model.NeuromorphicModel.save"]], "setup() (superneuroabm.model.neuromorphicmodel method)": [[2, "superneuroabm.model.NeuromorphicModel.setup"]], "simulate() (superneuroabm.model.neuromorphicmodel method)": [[2, "superneuroabm.model.NeuromorphicModel.simulate"]], "summary() (superneuroabm.model.neuromorphicmodel method)": [[2, "superneuroabm.model.NeuromorphicModel.summary"]], "superneuroabm": [[2, "module-superneuroabm"]], "superneuroabm.model": [[2, "module-superneuroabm.model"]], "superneuroabm.neuron": [[2, "module-superneuroabm.neuron"]], "synapse_step_func() (in module superneuroabm.neuron)": [[2, "superneuroabm.neuron.synapse_step_func"]], "synapse_with_stdp_step_func() (in module superneuroabm.neuron)": [[2, "superneuroabm.neuron.synapse_with_stdp_step_func"]], "update_synapse() (superneuroabm.model.neuromorphicmodel method)": [[2, "superneuroabm.model.NeuromorphicModel.update_synapse"]], "agentfactory (class in superneuroabm.core.agent)": [[3, "superneuroabm.core.agent.AgentFactory"]], "breed (class in superneuroabm.core.agent)": [[3, "superneuroabm.core.agent.Breed"]], "model (class in superneuroabm.core.model)": [[3, "superneuroabm.core.model.Model"]], "threadsperblock (superneuroabm.core.model.model attribute)": [[3, "superneuroabm.core.model.Model.THREADSPERBLOCK"]], "breeds (superneuroabm.core.agent.agentfactory property)": [[3, "superneuroabm.core.agent.AgentFactory.breeds"]], "compress_tensor() (in module superneuroabm.core.util)": [[3, "superneuroabm.core.util.compress_tensor"]], "convert_to_equal_side_tensor() (in module superneuroabm.core.util)": [[3, "superneuroabm.core.util.convert_to_equal_side_tensor"]], "create_agent() (superneuroabm.core.agent.agentfactory method)": [[3, "superneuroabm.core.agent.AgentFactory.create_agent"]], "create_agent_of_breed() (superneuroabm.core.model.model method)": [[3, "superneuroabm.core.model.Model.create_agent_of_breed"]], "generate_agent_data_tensors() (superneuroabm.core.agent.agentfactory method)": [[3, "superneuroabm.core.agent.AgentFactory.generate_agent_data_tensors"]], "generate_gpu_func() (in module superneuroabm.core.model)": [[3, "superneuroabm.core.model.generate_gpu_func"]], "get_agent_property_value() (superneuroabm.core.agent.agentfactory method)": [[3, "superneuroabm.core.agent.AgentFactory.get_agent_property_value"]], "get_agent_property_value() (superneuroabm.core.model.model method)": [[3, "superneuroabm.core.model.Model.get_agent_property_value"]], "get_agents_with() (superneuroabm.core.agent.agentfactory method)": [[3, "superneuroabm.core.agent.AgentFactory.get_agents_with"]], "get_agents_with() (superneuroabm.core.model.model method)": [[3, "superneuroabm.core.model.Model.get_agents_with"]], "get_synapse_weight() (superneuroabm.core.model.model method)": [[3, "superneuroabm.core.model.Model.get_synapse_weight"]], "load() (superneuroabm.core.model.model method)": [[3, "superneuroabm.core.model.Model.load"]], "name (superneuroabm.core.agent.breed property)": [[3, "superneuroabm.core.agent.Breed.name"]], "num_agents (superneuroabm.core.agent.agentfactory property)": [[3, "superneuroabm.core.agent.AgentFactory.num_agents"]], "properties (superneuroabm.core.agent.breed property)": [[3, "superneuroabm.core.agent.Breed.properties"]], "register_breed() (superneuroabm.core.agent.agentfactory method)": [[3, "superneuroabm.core.agent.AgentFactory.register_breed"]], "register_breed() (superneuroabm.core.model.model method)": [[3, "superneuroabm.core.model.Model.register_breed"]], "register_property() (superneuroabm.core.agent.breed method)": [[3, "superneuroabm.core.agent.Breed.register_property"]], "register_step_func() (superneuroabm.core.agent.breed method)": [[3, "superneuroabm.core.agent.Breed.register_step_func"]], "save() (superneuroabm.core.model.model method)": [[3, "superneuroabm.core.model.Model.save"]], "set_agent_property_value() (superneuroabm.core.agent.agentfactory method)": [[3, "superneuroabm.core.agent.AgentFactory.set_agent_property_value"]], "set_agent_property_value() (superneuroabm.core.model.model method)": [[3, "superneuroabm.core.model.Model.set_agent_property_value"]], "setup() (superneuroabm.core.model.model method)": [[3, "superneuroabm.core.model.Model.setup"]], "simulate() (superneuroabm.core.model.model method)": [[3, "superneuroabm.core.model.Model.simulate"]], "smap() (in module superneuroabm.core.model)": [[3, "superneuroabm.core.model.smap"]], "step_funcs (superneuroabm.core.agent.breed property)": [[3, "superneuroabm.core.agent.Breed.step_funcs"]], "superneuroabm.core": [[3, "module-superneuroabm.core"]], "superneuroabm.core.agent": [[3, "module-superneuroabm.core.agent"]], "superneuroabm.core.model": [[3, "module-superneuroabm.core.model"]], "superneuroabm.core.util": [[3, "module-superneuroabm.core.util"]], "update_agents_properties() (superneuroabm.core.agent.agentfactory method)": [[3, "superneuroabm.core.agent.AgentFactory.update_agents_properties"]]}})